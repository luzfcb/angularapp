{
  "responseData": {
    "feed": {
      "feedUrl": "http://pythonclub.com.br/feeds/fabio-c-barrionuevo-da-luz.rss.xml",
      "title": "PythonClub",
      "link": "http://pythonclub.com.br/",
      "author": "",
      "description": "",
      "type": "rss20",
      "entries": [
        {
          "title": "pyftpdlib - Criando um servidor FTP simples com python",
          "link": "http://pythonclub.com.br/pyftpdlib-criando-um-servidor-ftp-simples-com-python.html",
          "author": "Fábio C. Barrionuevo da Luz",
          "publishedDate": "Wed, 11 Jun 2014 14:00:00 -0700",
          "contentSnippet": "\nCriando um servidor FTP simples com python\n\nO que é FTP?\nFTP é um acrônimo de File Transfer Protocol. É um protocolo ...",
          "content": "\u003cdiv\u003e\n\u003ch2\u003eCriando um servidor FTP simples com python\u003c/h2\u003e\n\u003cdiv\u003e\n\u003ch3\u003eO que é FTP?\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eFTP\u003c/strong\u003e é um acrônimo de \u003cstrong\u003eF\u003c/strong\u003eile \u003cstrong\u003eT\u003c/strong\u003eransfer \u003cstrong\u003eP\u003c/strong\u003erotocol. É um protocolo inventado\npor \u003ca href\u003d\"http://en.wikipedia.org/wiki/Abhay_Bhushan\"\u003eAbhay Bhushan\u003c/a\u003e em abril de 1971 para resolver os problemas de transferências de dados na \u003ca href\u003d\"http://pt.wikipedia.org/wiki/ArpaNET\"\u003eARPANET\u003c/a\u003e,\nrede precursora (pode-se dizer mãe) da Internet, sendo que ele é anterior ao TCP e IP.\u003c/p\u003e\n\u003cp\u003eBaseado no trabalho de \u003ca href\u003d\"http://en.wikipedia.org/wiki/Abhay_Bhushan\"\u003eAbhay Bhushan\u003c/a\u003e foi criada a \u003ca href\u003d\"http://tools.ietf.org/html/rfc114\"\u003eRFC114\u003c/a\u003e, que padronizou a primeira versão do protocolo.\u003c/p\u003e\n\u003cp\u003ePosteriormente o protocolo FTP foi modificado para trabalhar sobre o TCP.\u003c/p\u003e\n\u003cp\u003eO protocolo FTP está em constante evolução, sendo que a versão mais recente para IPv4 é o \u003ca href\u003d\"http://tools.ietf.org/html/rfc0959\"\u003eRFC959\u003c/a\u003e, com melhorias\nde segurança adicionada pelo \u003ca href\u003d\"http://tools.ietf.org/html/rfc2228\"\u003eRFC2228\u003c/a\u003e e pela adição na \u003ca href\u003d\"http://tools.ietf.org/html/rfc2428\"\u003eRFC2428\u003c/a\u003e de extensões para suporte a IPv6.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFTP\u003c/strong\u003e tambem é o nome que comumente referencia software o \u0026quot;servidor ftp\u0026quot; e o software \u0026quot;cliente ftp\u0026quot;.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eComo funciona ?\u003c/h3\u003e\n\u003cp\u003eO protocolo FTP possui dois modos de funcionamento. O \u003cstrong\u003emodo Ativo\u003c/strong\u003e e o \u003cstrong\u003emodo Passivo\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eEm ambos os casos, o cliente cria uma \u003cem\u003econexão de controle\u003c/em\u003e TCP em uma porta não privilegiada aleatória \u003cem\u003eN\u003c/em\u003e para a porta de comando do servidor FTP, ou seja, a porta 21 do servidor FTP. Essa conexão é chamada de \u003cstrong\u003econexão de controle\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eNo \u003cstrong\u003emodo Ativo\u003c/strong\u003e, o cliente começa a escutar \u003cem\u003econexões de dados\u003c/em\u003e recebidas na porta \u003cem\u003eN+1\u003c/em\u003e a partir do servidor (o cliente envia o comando \u003cem\u003eFTP PORT N+1\u003c/em\u003e para informar o servidor no qual a porta está ouvindo).\u003c/p\u003e\n\u003cp\u003eEm situações em que o cliente está atrás de um firewall e é incapaz de aceitar conexões TCP, o \u003cstrong\u003emodo Passivo\u003c/strong\u003e pode ser usado.\u003c/p\u003e\n\u003cp\u003eNeste modo, o cliente usa a \u003cem\u003econexão de controle\u003c/em\u003e para enviar o comando \u003cem\u003ePASV\u003c/em\u003e  para o servidor, que em seguida responde ao cliente enviando o endereço IP e número da porta do servidor, o qual o cliente usa para abrir uma \u003cstrong\u003econexão de dados\u003c/strong\u003e de uma porta arbitraria para o ip e porta\nenviado pelo servidor.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eComandos FTP\u003c/h3\u003e\n\u003cp\u003eO \u003ca href\u003d\"http://tools.ietf.org/html/rfc0959\"\u003eRFC959\u003c/a\u003e bem como as posteriores modificações, adicionam alguns comandos que devem ser implementados pelos servidores e clientes FTP.\u003c/p\u003e\n\u003cp\u003eA lista com alguns desse comandos pode ser vista no link: \u003ca href\u003d\"http://en.wikipedia.org/wiki/List_of_FTP_commands\"\u003ehttp://en.wikipedia.org/wiki/List_of_FTP_commands\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eServidor FTP\u003c/h3\u003e\n\u003cp\u003eExistem vários softwares que implementam um servidor FTP.\u003c/p\u003e\n\u003cp\u003eOs mais conhecidos e utilizados são: vsftpd (Very Secure FTP Daemon) e ProFTPd para Linux, e o FileZilla Server para Windows.\u003c/p\u003e\n\u003cp\u003eUma lista mais completa pode ser encontrada no Wikipedia, neste link: \u003ca href\u003d\"http://en.wikipedia.org/wiki/List_of_FTP_server_software\"\u003ehttp://en.wikipedia.org/wiki/List_of_FTP_server_software\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eCliente FTP\u003c/h3\u003e\n\u003cp\u003eExistem varios clientes para o protocolo FTP.\u003c/p\u003e\n\u003cp\u003eO Windows Explorer, gerenciador de arquivos padrão em ambiente Windows, possui suporte complete ao protocolo FTP.\u003c/p\u003e\n\u003cp\u003eO navegador web Mozilla Firefox, bem como os navegadores Google Chrome, Internet Explorer, possem capacidade de acessar servidores ftp, mas somente em modo de leitura.\u003c/p\u003e\n\u003cp\u003eO complemento FireFTP para o navegador web Mozilla Firefox, adiciona ao Firefox suporte completo ao protocolo FTP.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003epyftpdlib - O que é?\u003c/h3\u003e\n\u003cp\u003e\u003ca href\u003d\"https://github.com/giampaolo/pyftpdlib\"\u003epyftpdlib\u003c/a\u003e é uma biblioteca Python que implementa um Servidor FTP, fornecendo uma interface de alto nivel para facilmente escrever servidores FTP muito eficientes, escaláveis e assíncronos.\u003c/p\u003e\n\u003cp\u003eÉ a implementação do \u003ca href\u003d\"http://tools.ietf.org/html/rfc0959\"\u003eRFC959\u003c/a\u003e servidor de FTP mais completo disponível para a linguagem de programação Python e é usado em projetos como o Google Chromium e Bazaar e incluída por padrão nos repositórios de pacotes do Debian, Ubuntu, Fedora e FreeBSD.\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eRecursos\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eExtremamente leve, rápido e escalável (veja os \u003ca href\u003d\"http://pythonhosted.org/pyftpdlib/benchmarks.html\"\u003ebenchmarks\u003c/a\u003e e o \u003ca href\u003d\"https://github.com/giampaolo/pyftpdlib/issues/203\"\u003eporquê\u003c/a\u003e).\u003c/li\u003e\n\u003cli\u003eUsa sendfile (2) (ver pysendfile) chamada de sistema para uploads.\u003c/li\u003e\n\u003cli\u003eUsa epoll() / kqueue() / select() para lidar com a concorrência de forma assíncrona, e opcionalmente, tambem suporta modelo\nde multiplas threads/processos.\u003c/li\u003e\n\u003cli\u003eÉ portavel: inteiramente escrito em Python puro; trabalha com Python 2.4 à 3.4 (usando uma única base de código).\u003c/li\u003e\n\u003cli\u003eSuporta SFTP (\u003ca href\u003d\"http://tools.ietf.org/html/rfc4217\"\u003eRFC4217\u003c/a\u003e), IPv6 (\u003ca href\u003d\"http://tools.ietf.org/html/rfc2428\"\u003eRFC2428\u003c/a\u003e), os nomes de arquivo Unicode (\u003ca href\u003d\"http://tools.ietf.org/html/rfc2640\"\u003eRFC2640\u003c/a\u003e), comando MLSD/MLST (\u003ca href\u003d\"http://tools.ietf.org/html/rfc3659\"\u003eRFC3659\u003c/a\u003e).\u003c/li\u003e\n\u003cli\u003eSuporta usuários virtuais e sistemas de arquivos virtuais.\u003c/li\u003e\n\u003cli\u003eSistema extremamente flexível de \u0026quot;autorizadores\u0026quot;, capaz de gerenciar usuários \u0026quot;virtuais\u0026quot; e usuários \u0026quot;reais\u0026quot; em tanto UNIX e Windows.\u003c/li\u003e\n\u003cli\u003eCobertura de teste perto de 100%.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eInstalando no Ubuntu 14.04 64bits\u003c/h3\u003e\n\u003cp\u003ePara instalar é relativamente simples.\nVocê possui duas opções de como instalar.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOpção 1\u003c/strong\u003e - Instalar diretametente à partir do repositorio do Ubuntu. :\u003c/p\u003e\n\u003cp\u003eAbra um terminal e execute:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003esudo apt-get install python-pyftpdlib\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eObs: O repositorio do ubuntu possui uma versão muito desatualizada (1.2) do pyftpdlib, que atualmente está na versão 1.4.\nRecomendo usar a opção 2.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOpção 2\u003c/strong\u003e - Instalar utilizando o \u003cem\u003epip\u003c/em\u003e:\u003c/p\u003e\n\u003cp\u003eSupondo que você já possua o \u003cem\u003epip\u003c/em\u003e instalado.\u003c/p\u003e\n\u003cp\u003eAbra um terminal e execute:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003esudo pip install pyftpdlib\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSe não possuir o \u003cem\u003epip\u003c/em\u003e instalado.\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003esudo apt-get install python-setuptools\nsudo easy_install pip\nsudo pip install pyftpdlib\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eModo standalone\u003c/h3\u003e\n\u003cp\u003eCom o modo standalone, você pode criar rápidamente um servidor FTP anonimo somente leitura, disponibilizar os arquivos do diretorio atual simplesmente executando:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003epython -m pyftpdlib\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eApós executar o comando acima, você obterá uma saida similar a esta:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003efabio@luzfcb:~\u003cspan\u003e$ \u003c/span\u003epython -m pyftpdlib\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e \u0026gt;\u0026gt;\u0026gt; starting FTP server on 0.0.0.0:2121, \u003cspan\u003epid\u003c/span\u003e\u003cspan\u003e\u003d\u003c/span\u003e21884 \u003cspan\u003e\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e poller: \u0026lt;class \u003cspan\u003e\u0026#39;pyftpdlib.ioloop.Epoll\u0026#39;\u003c/span\u003e\u0026gt;\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e masquerade \u003cspan\u003e(\u003c/span\u003eNAT\u003cspan\u003e)\u003c/span\u003e address: None\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e passive ports: None\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e use sendfile\u003cspan\u003e(\u003c/span\u003e2\u003cspan\u003e)\u003c/span\u003e: False\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePara visualizar localmente, abra o navegador e acesse o endereço \u003ctt\u003e\u003cspan\u003eftp://127.0.0.1:2121\u003c/span\u003e\u003c/tt\u003e ou \u003ctt\u003e\u003cspan\u003eftp://endereço_ip_ou_hostname_atual_do_seu_servidor:2121\u003c/span\u003e\u003c/tt\u003e\u003c/p\u003e\n\u003cp\u003eVocê vai obter algo como:\u003c/p\u003e\n\u003cimg alt\u003d\"acessando o servidor FTP localmente pelo navegador\" src\u003d\"images/luzfcb/ftp_001.png\"\u003e\n\u003cp\u003eNo terminal, você poderá visualizar o log:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003efabio@luzfcb:~\u003cspan\u003e$ \u003c/span\u003epython -m pyftpdlib\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e \u0026gt;\u0026gt;\u0026gt; starting FTP server on 0.0.0.0:2121, \u003cspan\u003epid\u003c/span\u003e\u003cspan\u003e\u003d\u003c/span\u003e21884 \u003cspan\u003e\u0026lt;\u0026lt;\u0026lt;\u003c/span\u003e\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e poller: \u0026lt;class \u003cspan\u003e\u0026#39;pyftpdlib.ioloop.Epoll\u0026#39;\u003c/span\u003e\u0026gt;\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e masquerade \u003cspan\u003e(\u003c/span\u003eNAT\u003cspan\u003e)\u003c/span\u003e address: None\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e passive ports: None\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:17:38\u003cspan\u003e]\u003c/span\u003e use sendfile\u003cspan\u003e(\u003c/span\u003e2\u003cspan\u003e)\u003c/span\u003e: False\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:22:28\u003cspan\u003e]\u003c/span\u003e 127.0.0.1:41154-\u003cspan\u003e[]\u003c/span\u003e FTP session opened \u003cspan\u003e(\u003c/span\u003econnect\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:22:28\u003cspan\u003e]\u003c/span\u003e 127.0.0.1:41154-\u003cspan\u003e[\u003c/span\u003eanonymous\u003cspan\u003e]\u003c/span\u003e USER \u003cspan\u003e\u0026#39;anonymous\u0026#39;\u003c/span\u003e logged in.\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:22:28\u003cspan\u003e]\u003c/span\u003e 127.0.0.1:41154-\u003cspan\u003e[\u003c/span\u003eanonymous\u003cspan\u003e]\u003c/span\u003e CWD /home/luzfcb/pythonclub.github.io 250\n\u003cspan\u003e[\u003c/span\u003eI 14-06-11 13:22:28\u003cspan\u003e]\u003c/span\u003e 127.0.0.1:41154-\u003cspan\u003e[\u003c/span\u003eanonymous\u003cspan\u003e]\u003c/span\u003e FTP session closed \u003cspan\u003e(\u003c/span\u003edisconnect\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eVocê tambem pode usar algumas opções para modificar como o \u003ctt\u003epyftpdlib\u003c/tt\u003e é iniciado.\u003c/p\u003e\n\u003cp\u003ePara ver estas opção, execute:\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003efabio@luzfcb:~\u003cspan\u003e$ \u003c/span\u003epython -m pyftpdlib -h\n\u003c/pre\u003e\u003c/div\u003e\n\u003cdiv\u003e\u003cpre\u003eStart a stand alone anonymous FTP server.\n\nOptions:\n  -h, --help\n     show this help message and exit\n\n  -i ADDRESS, --interface\u003dADDRESS\n     specify the interface to run on (default all interfaces)\n\n  -p PORT, --port\u003dPORT\n     specify port number to run on (default 2121)\n\n  -w, --write\n     grants write access for the anonymous user (default read-only)\n\n  -d FOLDER, --directory\u003dFOLDER\n     specify the directory to share (default current directory)\n\n  -n ADDRESS, --nat-address\u003dADDRESS\n     the NAT address to use for passive connections\n\n  -r FROM-TO, --range\u003dFROM-TO\n     the range of TCP ports to use for passive connections (e.g. -r 8000-9000)\n\n  -v, --version\n     print pyftpdlib version and exit\n\n  -V, --verbose\n     activate a more verbose logging\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ePor exemplo, poderiamos mudar a porta padrão\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003epython -m pyftpdlib -p 8080\n\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eSe você quiser iniciar o servidor FTP de modo que quem for acessar não necessite informar a porta, ou seja\nele poderá acessar o servidor em um endereço similar a \u003ctt\u003e\u003cspan\u003eftp://127.0.0.1\u003c/span\u003e\u003c/tt\u003e ou \u003ctt\u003e\u003cspan\u003eftp://endereço_ip_ou_hostname_atual_do_seu_servidor\u003c/span\u003e\u003c/tt\u003e,\né necessario executa-lo como super-usuário, informando a porta 21, que é a padrão do protocolo, conforme exemplificado abaixo.\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003esudo python -m pyftpdlib -p 21\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch3\u003eModo customizado por você\u003c/h3\u003e\n\u003cp\u003eEm um exemplo um pouco mais complicado, pode-se programar um servidor FTP com autenticação, com multiplos processos, que usa os usuarios e senha já definidos no Linux/Unix.\u003c/p\u003e\n\u003cdiv\u003e\u003cpre\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elogging\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003esys\u003c/span\u003e\n\n\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003epyftpdlib.handlers\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eFTPHandler\u003c/span\u003e\n\u003cspan\u003e# servidor normal\u003c/span\u003e\n\u003cspan\u003e#from pyftpdlib.servers import FTPServer\u003c/span\u003e\n\u003cspan\u003e# servidor multiprocesso\u003c/span\u003e\n\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003epyftpdlib.servers\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eMultiprocessFTPServer\u003c/span\u003e\n\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003epyftpdlib.authorizers\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eUnixAuthorizer\u003c/span\u003e\n\u003cspan\u003efrom\u003c/span\u003e \u003cspan\u003epyftpdlib.filesystems\u003c/span\u003e \u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eUnixFilesystem\u003c/span\u003e\n\n\n\n\u003cspan\u003edef\u003c/span\u003e \u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e():\u003c/span\u003e\n    \u003cspan\u003e# configuracao de log\u003c/span\u003e\n    \u003cspan\u003elogger\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003elogging\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetLogger\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\n    \u003cspan\u003ech\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003elogging\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eStreamHandler\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003esys\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003estdout\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003elogger\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetLevel\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elogging\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eDEBUG\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003ech\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetLevel\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elogging\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eDEBUG\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eformatter\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003elogging\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eFormatter\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e%(asctime)s\u003c/span\u003e\u003cspan\u003e - \u003c/span\u003e\u003cspan\u003e%(name)s\u003c/span\u003e\u003cspan\u003e - \u003c/span\u003e\u003cspan\u003e%(levelname)s\u003c/span\u003e\u003cspan\u003e - \u003c/span\u003e\u003cspan\u003e%(message)s\u003c/span\u003e\u003cspan\u003e\u0026#39;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003ech\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetFormatter\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eformatter\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003elogger\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eaddHandler\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ech\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e# fim configuracao de log\u003c/span\u003e\n\n    \u003cspan\u003e# usando os usuarios UNIX\u003c/span\u003e\n    \u003cspan\u003eauthorizer\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003eUnixAuthorizer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003erejected_users\u003c/span\u003e\u003cspan\u003e\u003d\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026quot;root\u0026quot;\u003c/span\u003e\u003cspan\u003e],\u003c/span\u003e \u003cspan\u003erequire_valid_shell\u003c/span\u003e\u003cspan\u003e\u003d\u003c/span\u003e\u003cspan\u003eTrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003ehandler\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003eFTPHandler\u003c/span\u003e\n    \u003cspan\u003ehandler\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthorizer\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003eauthorizer\u003c/span\u003e\n    \u003cspan\u003ehandler\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eabstracted_fs\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003eUnixFilesystem\u003c/span\u003e\n    \u003cspan\u003ehandler\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003elog_prefix\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003e\u0026quot;\u003c/span\u003e\u003cspan\u003e%(username)s\u003c/span\u003e\u003cspan\u003e@\u003c/span\u003e\u003cspan\u003e%(remote_ip)s\u003c/span\u003e\u003cspan\u003e\u0026quot;\u003c/span\u003e\n    \u003cspan\u003e#logger.basicConfig(filename\u003d\u0026#39;/var/log/pyftpd.log\u0026#39;, level\u003dlogging.INFO)\u003c/span\u003e\n    \u003cspan\u003e# utilizando o servidor multiprocesso\u003c/span\u003e\n    \u003cspan\u003eserver\u003c/span\u003e \u003cspan\u003e\u003d\u003c/span\u003e \u003cspan\u003eMultiprocessFTPServer\u003c/span\u003e\u003cspan\u003e((\u003c/span\u003e\u003cspan\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e21\u003c/span\u003e\u003cspan\u003e),\u003c/span\u003e \u003cspan\u003ehandler\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eserver\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eserve_forever\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\n\n\u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e__name__\u003c/span\u003e \u003cspan\u003e\u003d\u003d\u003c/span\u003e \u003cspan\u003e\u0026quot;__main__\u0026quot;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e()\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
          "categories": [
            "python",
            "ftp",
            "tutorial",
            "servidor-ftp"
          ]
        },
        {
          "title": "Como fazer fork, clone, push pull-request no Github",
          "link": "http://pythonclub.com.br/como-fazer-fork-clone-push-pull-request-no-github.html",
          "author": "Fábio C. Barrionuevo da Luz",
          "publishedDate": "Mon, 12 May 2014 21:40:00 -0700",
          "contentSnippet": "Neste video, ensino o básico que vai lhe ajudar a dar seus primeiros passos no git, github e talvez lhe dar a habilidade ...",
          "content": "\u003cp\u003eNeste video, ensino o básico que vai lhe ajudar a dar seus primeiros passos no git, github e talvez lhe dar a habilidade necessaria para contribuir com postagens neste blog ou em qualquer outro projeto que você quiser.\u003c/p\u003e\n\u003cdiv\u003e\n\u003ch2\u003eComo fazer fork, clone, push pull-request no Github, ou como contribuir com projetos open-source\u003c/h2\u003e\n\u003cdiv align\u003d\"left\"\u003e\u003ciframe width\u003d\"420\" height\u003d\"315\" src\u003d\"https://www.youtube.com/embed/am1XMMKk0UI\" frameborder\u003d\"0\"\u003e\u003c/iframe\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ch3\u003eReferências uteis:\u003c/h3\u003e\n\u003cp\u003eO que é URL Limpa: \u003ca href\u003d\"http://en.wikipedia.org/wiki/Clean_URL\"\u003ehttp://en.wikipedia.org/wiki/Clean_URL\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eLivro oficial do Git em Portugues: \u003ca href\u003d\"http://git-scm.com/book/pt-br/\"\u003ehttp://git-scm.com/book/pt-br/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eOutros protocolos para clonar alem do HTTPS : \u003ca href\u003d\"http://git-scm.com/book/pt-br/Git-no-Servidor-Os-Protocolos\"\u003ehttp://git-scm.com/book/pt-br/Git-no-Servidor-Os-Protocolos\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eSmartGit/Hg - Cliente Grafico para o git feito em Java com versões para Windows/Linux/Mac: \u003ca href\u003d\"http://www.syntevo.com/smartgithg/download\"\u003ehttp://www.syntevo.com/smartgithg/download\u003c/a\u003e\u003c/p\u003e\n\u003cdiv\u003e\n\u003ch4\u003eTutoriais:\u003c/h4\u003e\n\u003cp\u003eCurso completo \u0026quot;Começando com o Git\u0026quot; do Fabio Akita: \u003ca href\u003d\"http://www.akitaonrails.com/2010/08/17/screencast-comecando-com-git\"\u003ehttp://www.akitaonrails.com/2010/08/17/screencast-comecando-com-git\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGit e GitHub para Iniciantes da Loiane Groner: \u003ca href\u003d\"http://www.loiane.com/2013/11/screencast-git-e-github-para-iniciantes/\"\u003ehttp://www.loiane.com/2013/11/screencast-git-e-github-para-iniciantes/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eTutorial oficial do Github: \u003ca href\u003d\"http://try.github.com\"\u003ehttp://try.github.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eTutorial Aprendendo Git Branching: \u003ca href\u003d\"http://pcottle.github.io/learnGitBranching/?demo\"\u003ehttp://pcottle.github.io/learnGitBranching/?demo\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n\u003ch4\u003eArquivo .gitignore:\u003c/h4\u003e\n\u003cp\u003eO que é o arquivo .gitignore: \u003ca href\u003d\"http://pt-br.gitready.com/iniciante/2009/01/19/ignoring-files.html\"\u003ehttp://pt-br.gitready.com/iniciante/2009/01/19/ignoring-files.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGerador de arquivo .gitignore: \u003ca href\u003d\"http://www.gitignore.io/\"\u003ehttp://www.gitignore.io/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eExemplos de arquivo .gitignore para diversas linguagens: \u003ca href\u003d\"https://github.com/github/gitignore\"\u003ehttps://github.com/github/gitignore\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e",
          "categories": [
            "tutorial",
            "git",
            "github"
          ]
        }
      ]
    }
  },
  "responseDetails": null,
  "responseStatus": 200
}
